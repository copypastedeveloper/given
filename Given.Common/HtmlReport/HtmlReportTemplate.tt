<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".xml" #>

<!DOCTYPE html>
<html>
    <head>
        <title><#= ReportConfiguration.AssemblyHeader#></title>
        <#= GetReportHead()#>
		<style type="text/css">
			.scenario li, .scenario ul { list-style: none; }
            .passed { background-color: lightgreen;}
            .failed { background-color: indianred;}
			.then.failed { cursor: pointer;}
			.then ul li { display: none; }
		</style>
		<script type="text/javascript">
			$(function () {
				$('.then').on('click',function () {$(this).find('.exception-message').toggle();})
			})
		</script>
    </head>
    <body>
      <div class="container-fluid">
            <div class="page-header">
                  <h1><#= ReportConfiguration.AssemblyHeader#></h1>
            </div>
            <div class="row-fluid">
                <div class="span2">
					<div class="well sidebar-nav">
						<ul class="nav nav-list">
							<li class="nav-header">Results</li>
							<#foreach(var state in TestResults.SelectMany(x => x.Tests).SelectMany(x => x.Thens).GroupBy(then => then.State))
                              {#>
							<li>
								<#=string.Format("{0} : {1}",state.Key, state.Count())#>
							</li>
							<#}#>
						</ul>	
					</div>
                </div>
                <div class="span10">
					<# foreach (var story in TestResults) 
						{ #>
						<div class="story well">
							<h5><#=story.GetDescription("{0}<br />{1}<br />{2}.")#></h5>
						<# foreach (var result in story.Tests) 
							{ #>
							<ul class="well scenario"><h6><#=System.Globalization.CultureInfo.CurrentCulture.TextInfo.ToTitleCase(result.Type.Name.ToString().Replace("_"," "))#></h6>
								<# foreach (var given in result.Givens)
									{#>
										<li><#=string.Format("{0} {1}", result.Givens.First() == given ? Text.Given : Text.And, given.Replace("_", " "))#></li>
									<#}#>
								<# foreach (var when in result.Whens)
									{
									#>
										<li><#=string.Format("{0} {1}", result.Whens.First() == when ? Text.When : Text.And, when.Replace("_", " "))#></li>
									<#}#>
								<# foreach (var then in result.Thens)
									{
									#>
										<li class="then <#=then.State.ToString().ToLower() #>"><#=string.Format("{0} {1}", result.Thens.First() == then ? Text.Then : Text.And, then.Name.Replace("_", " "))#>
											<#if(!string.IsNullOrEmpty(then.Message)) {#>
											<ul>
												<li class="exception-message"><#=then.Message#></li>
											</ul>
											<#}#>
										</li>
									<#}#>
							</ul>
						<# } #>
						</div>
					<#}
					#>
                </div>
            </div>
      </div>
    </body>
</html>
